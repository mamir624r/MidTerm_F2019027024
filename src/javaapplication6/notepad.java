/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication6;

import java.awt.Color;
import java.awt.FileDialog;
import java.awt.datatransfer.Clipboard;
import java.awt.event.TextEvent;
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.StringReader;
import javax.swing.JOptionPane;

/**
 *
 * @author Amar
 */
public class notepad extends javax.swing.JFrame {

    String programeName = "Notepad";
    String filename ="";
    String holdText ;
    String fn ;
    String dir;
    boolean textChanged = false;
    String fileName;
    Clipboard clip = getToolkit().getSystemClipboard();
    /**
     * Creates new form notepad
     */
    public notepad() {
        initComponents();
    }
     public void checkFile(){
        BufferedReader read;
        StringBuilder sb = new StringBuilder();
        try{
            read = new BufferedReader(new FileReader(fileName));
            String line;
            while((line = read.readLine())!= null){
                sb.append(line).append("\n");
            }
            textArea.setText(sb.toString());
            read.close();
        }catch(FileNotFoundException e){
            System.err.println("File not found");
        
        }catch(IOException ioe){
    }}
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dialogColor = new javax.swing.JDialog();
        colorChooser = new javax.swing.JColorChooser();
        textArea = new java.awt.TextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        newMenu = new javax.swing.JMenuItem();
        openMenu = new javax.swing.JMenuItem();
        saveMenu = new javax.swing.JMenuItem();
        saveasMenu = new javax.swing.JMenuItem();
        exitMenu = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        colorMenu = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();

        javax.swing.GroupLayout dialogColorLayout = new javax.swing.GroupLayout(dialogColor.getContentPane());
        dialogColor.getContentPane().setLayout(dialogColorLayout);
        dialogColorLayout.setHorizontalGroup(
            dialogColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogColorLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(colorChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 613, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(195, Short.MAX_VALUE))
        );
        dialogColorLayout.setVerticalGroup(
            dialogColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogColorLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(colorChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(120, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("MyNotepad");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        textArea.addTextListener(new java.awt.event.TextListener() {
            public void textValueChanged(java.awt.event.TextEvent evt) {
                textAreaTextValueChanged(evt);
            }
        });

        jMenu1.setText("File");

        newMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        newMenu.setIcon(new javax.swing.ImageIcon("C:\\Users\\Amar\\Desktop\\Development Techniques\\must_have_icon_set\\New\\New_16x16.png")); // NOI18N
        newMenu.setText("New");
        newMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newMenuActionPerformed(evt);
            }
        });
        jMenu1.add(newMenu);

        openMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        openMenu.setIcon(new javax.swing.ImageIcon("C:\\Users\\Amar\\Desktop\\Development Techniques\\must_have_icon_set\\Open\\Open_16x16.png")); // NOI18N
        openMenu.setText("Open");
        openMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuActionPerformed(evt);
            }
        });
        jMenu1.add(openMenu);

        saveMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        saveMenu.setIcon(new javax.swing.ImageIcon("C:\\Users\\Amar\\Desktop\\Development Techniques\\must_have_icon_set\\Save\\Save_16x16.png")); // NOI18N
        saveMenu.setText("Save");
        saveMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuActionPerformed(evt);
            }
        });
        jMenu1.add(saveMenu);

        saveasMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_DOWN_MASK | java.awt.event.InputEvent.CTRL_DOWN_MASK));
        saveasMenu.setIcon(new javax.swing.ImageIcon("C:\\Users\\Amar\\Desktop\\Development Techniques\\must_have_icon_set\\Save\\Save_16x16.png")); // NOI18N
        saveasMenu.setText("SaveAs");
        saveasMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveasMenuActionPerformed(evt);
            }
        });
        jMenu1.add(saveasMenu);

        exitMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        exitMenu.setIcon(new javax.swing.ImageIcon("C:\\Users\\Amar\\Desktop\\Development Techniques\\must_have_icon_set\\Remove\\Remove_16x16.png")); // NOI18N
        exitMenu.setText("Exit");
        exitMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuActionPerformed(evt);
            }
        });
        jMenu1.add(exitMenu);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        colorMenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_SPACE, 0));
        colorMenu.setIcon(new javax.swing.ImageIcon("C:\\Users\\Amar\\Desktop\\Development Techniques\\must_have_icon_set\\Edit\\Edit_16x16.png")); // NOI18N
        colorMenu.setText("textColor");
        colorMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorMenuActionPerformed(evt);
            }
        });
        jMenu2.add(colorMenu);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem3.setIcon(new javax.swing.ImageIcon("C:\\Users\\Amar\\Desktop\\Development Techniques\\must_have_icon_set\\Copy\\Copy_16x16.png")); // NOI18N
        jMenuItem3.setText("Copy");
        jMenu2.add(jMenuItem3);

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem4.setIcon(new javax.swing.ImageIcon("C:\\Users\\Amar\\Desktop\\Development Techniques\\must_have_icon_set\\Cut\\Cut_16x16.png")); // NOI18N
        jMenuItem4.setText("Cut");
        jMenu2.add(jMenuItem4);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        jMenuItem5.setIcon(new javax.swing.ImageIcon("C:\\Users\\Amar\\Desktop\\Development Techniques\\must_have_icon_set\\Paste\\Paste_16x16.png")); // NOI18N
        jMenuItem5.setText("Paste");
        jMenu2.add(jMenuItem5);

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DELETE, 0));
        jMenuItem6.setIcon(new javax.swing.ImageIcon("C:\\Users\\Amar\\Desktop\\Development Techniques\\must_have_icon_set\\Delete\\Delete_16x16.png")); // NOI18N
        jMenuItem6.setText("Delete");
        jMenu2.add(jMenuItem6);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Formate");

        jMenuItem1.setText("Wordwrap");
        jMenu3.add(jMenuItem1);

        jMenuItem2.setText("Font");
        jMenu3.add(jMenuItem2);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("View");

        jMenuItem7.setIcon(new javax.swing.ImageIcon("C:\\Users\\Amar\\Desktop\\Development Techniques\\must_have_icon_set\\Zoom In\\Zoom In_16x16.png")); // NOI18N
        jMenuItem7.setText("Zoom");
        jMenu4.add(jMenuItem7);

        jMenuItem8.setIcon(new javax.swing.ImageIcon("C:\\Users\\Amar\\Desktop\\Development Techniques\\must_have_icon_set\\Archive\\Archive_16x16.png")); // NOI18N
        jMenuItem8.setText("StatusBar");
        jMenu4.add(jMenuItem8);

        jMenuBar1.add(jMenu4);

        jMenu5.setText("Help");

        jMenuItem9.setIcon(new javax.swing.ImageIcon("C:\\Users\\Amar\\Desktop\\Development Techniques\\must_have_icon_set\\Help\\Help_16x16.png")); // NOI18N
        jMenuItem9.setText("ViewHelp");
        jMenu5.add(jMenuItem9);

        jMenuItem10.setIcon(new javax.swing.ImageIcon("C:\\Users\\Amar\\Desktop\\Development Techniques\\must_have_icon_set\\Send\\Send_16x16.png")); // NOI18N
        jMenuItem10.setText("SendfeedBack");
        jMenu5.add(jMenuItem10);

        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textArea, javax.swing.GroupLayout.DEFAULT_SIZE, 660, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(textArea, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 439, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newMenuActionPerformed
       newFile();
    }//GEN-LAST:event_newMenuActionPerformed

    private void openMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuActionPerformed
    if(textArea.getText().length()<1){
     FileDialog fd = new FileDialog(this,"choose file",FileDialog.LOAD);
     fd.show();
     if(fd.getFile()!= null){
     fileName= fd.getDirectory()+  fd.getFile();
         setTitle(fileName);
         checkFile();
     }
     textArea.requestFocus();
    }
    else if(! textChanged){
     FileDialog fd = new FileDialog(this,"choose file",FileDialog.LOAD);
     fd.show();
     if(fd.getFile()!= null){
     fileName= fd.getDirectory()+fd.getFile();
         setTitle(fileName);
         checkFile();
     }
      textArea.requestFocus();
    }
    else{
        int confirm = JOptionPane.showConfirmDialog(null, "Do you want to save before existing this file");
        if(confirm== JOptionPane.YES_OPTION)
        {
        if("".equals(filename)){
            saveAs();
        
     
        }
        else{
        save(filename);
        }
        FileDialog fd = new FileDialog(this,"choose file",FileDialog.LOAD);
     fd.show();
     if(fd.getFile()!= null){
     fileName= fd.getDirectory()+fd.getFile();
         setTitle(fileName);
         checkFile();
     }
      textArea.requestFocus();
    }
    }
    
    }//GEN-LAST:event_openMenuActionPerformed

    private void saveMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuActionPerformed
   if(filename.equals(""))
       saveAs();
   else
       save(filename);
    }//GEN-LAST:event_saveMenuActionPerformed

    private void saveasMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveasMenuActionPerformed
        saveAs();
    }//GEN-LAST:event_saveasMenuActionPerformed

    private void exitMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuActionPerformed
        if("".equals(textArea.getText())){
        System.exit(0);
        }
        else if(!textChanged) {
        System.exit(0);
        }
        else{
             int confirm = JOptionPane.showConfirmDialog(this, "Do you want to save before existing this file");
        if(confirm== JOptionPane.YES_OPTION){
            if(filename.equals(""))
       saveAs();
   else
       save(filename);
    }  
        if(confirm == JOptionPane.NO_OPTION){
        System.exit(0);
        }
        
        }
    }//GEN-LAST:event_exitMenuActionPerformed

    private void textAreaTextValueChanged(java.awt.event.TextEvent evt) {//GEN-FIRST:event_textAreaTextValueChanged
      if(TextEvent.TEXT_VALUE_CHANGED!=0)
      {
      if(!textChanged)
          setTitle("*"+getTitle());
      textChanged= true;
      saveMenu.setEnabled(true);
      }
    }//GEN-LAST:event_textAreaTextValueChanged

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
         if("".equals(textArea.getText())){
        System.exit(0);
        }
        else if(!textChanged) {
        System.exit(0);
        }
        else{
             int confirm = JOptionPane.showConfirmDialog(this, "Do you want to save before existing this file");
        if(confirm== JOptionPane.YES_OPTION){
            if(filename.equals(""))
       saveAs();
   else
       save(filename);
    }  
        if(confirm == JOptionPane.NO_OPTION){
        System.exit(0);
        }
        
        }
       
    }//GEN-LAST:event_formWindowClosing

    private void colorMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorMenuActionPerformed
        Color c = colorChooser.showDialog(null, "color Dialog", Color.yellow, rootPaneCheckingEnabled);
        textArea.setForeground(c);
    }//GEN-LAST:event_colorMenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(notepad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(notepad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(notepad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(notepad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new notepad().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JColorChooser colorChooser;
    private javax.swing.JMenuItem colorMenu;
    private javax.swing.JDialog dialogColor;
    private javax.swing.JMenuItem exitMenu;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JMenuItem newMenu;
    private javax.swing.JMenuItem openMenu;
    private javax.swing.JMenuItem saveMenu;
    private javax.swing.JMenuItem saveasMenu;
    private java.awt.TextArea textArea;
    // End of variables declaration//GEN-END:variables

    private void saveAs() {
        FileDialog fd = new FileDialog(notepad.this,"save",FileDialog.SAVE);
        fd.show();
        if(fd.getFile() != null){
        fn = fd.getFile();
        dir = fd.getDirectory();
        filename = dir + fn+ ".txt";
            setTitle(filename);
            try{

                DataOutputStream d = new DataOutputStream(new FileOutputStream(filename));
                holdText = textArea.getText();
                BufferedReader br = new BufferedReader(new StringReader(holdText));
                while ((holdText= br.readLine())!= null)
                {
                d.writeBytes(holdText+"\r\n");
                d.close();
                }
                        
            }
            catch(Exception e){
                System.out.println("file not found");
            }
            textArea.requestFocus();
            save(filename);
        }
        
    }

    private void save(String filename) {
        setTitle(programeName+""+filename);
        try{
        FileWriter out;
        out = new FileWriter(fn);
        out.write(textArea.getText());
        out.close();
        
        }
        catch(Exception err){
            System.out.println("Error"+err);
        }
        textChanged = false;
        saveMenu.setEnabled(false);
        
    }

    private void newFile() {
        if(textArea.getText().length()<1){
            setTitle("untiteld"+programeName);
            textArea.setText("");
            textChanged = false;
        }
        else if (!textChanged){
            setTitle("untiteld"+programeName);
            textArea.setText("");
            textChanged = false;
        
        }
        else{
        int confirm = JOptionPane.showConfirmDialog(null, "Do you want to save before existing this file");
        if(confirm== JOptionPane.YES_OPTION)
        {
        if("".equals(filename)){
            saveAs();
        }
        else{
            save(filename);
        }
            setTitle(programeName);
            filename = "";
            textArea.setText("");
            textChanged = false;
        }
        else if(confirm== JOptionPane.NO_OPTION){
        setTitle(programeName);
            textArea.setText("");
            textChanged = false;
        }
        }
    }

    
}
